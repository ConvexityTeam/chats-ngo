{"version":3,"sources":["pages/Dashboard.js","components/Typography/PageTitle.js","utils/demo/tableData.js","components/Cards/InfoCard.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","components/RoundIcon.js","../node_modules/classnames/index.js","utils/demo/chartsData.js"],"names":["Dashboard","currentNGO","AuthService","getCurrentNGO","console","log","useState","page","setData","useEffect","response","slice","className","title","value","icon","PeopleIcon","iconColorClass","bgColorClass","MoneyIcon","doughnutOptions","legends","doughnutLegends","barOptions","barLegends","PageTitle","children","avatar","name","job","amount","status","date","InfoCard","Chart","ChartLegend","map","legend","key","color","RoundIcon","Icon","cls","classNames","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","lineLegends","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","lineOptions","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","borderWidth"],"mappings":"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","file":"static/js/7.a1604f34.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n// import CTA from '../components/CTA'\nimport InfoCard from '../components/Cards/InfoCard'\nimport ChartCard from '../components/Chart/ChartCard'\nimport { Doughnut, Bar } from 'react-chartjs-2'\nimport ChartLegend from '../components/Chart/ChartLegend'\nimport PageTitle from '../components/Typography/PageTitle'\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from '../icons'\nimport RoundIcon from '../components/RoundIcon'\nimport response from '../utils/demo/tableData'\n\n\nimport {\n  doughnutOptions,\n  barOptions,\n  doughnutLegends,\n  barLegends\n} from '../utils/demo/chartsData'\n\nimport AuthService from \"../services/auth.service\";\n\nfunction Dashboard() {\n  const currentNGO = AuthService.getCurrentNGO();\n  // const result = response.data\n  // console.log(result)\n  console.log(currentNGO);\n  const [page, setPage] = useState(1)\n  const [data, setData] = useState([])\n\n  // pagination setup\n  const resultsPerPage = 10\n  // const totalResults = response.length\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p)\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n  }, [page])\n\n  return (\n    <>\n      <PageTitle>Dashboard</PageTitle>\n\n      {/* <CTA /> */}\n\n      {/* <!-- Cards --> */}\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Wallet Balance\" value=\"$125,000\">\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Total Amount Received\" value=\"$46,760\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-500 dark:text-green-100\"\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Total Amount Disbursed\" value=\"$842,000\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Total Balance\" value=\"$842,000\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      {/* <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Client</TableCell>\n              <TableCell>Amount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Date</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar className=\"hidden mr-3 md:block\" src={user.avatar} alt=\"User image\" />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>{user.status}</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer> */}\n\n      <PageTitle>Charts</PageTitle>\n      <div className=\"grid gap-6 mb-8 md:grid-cols-3\">\n        <ChartCard title=\"Beneficiary Age Group\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Beneficiary By Gender\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Vendor Transaction By Beneficiary\">\n          <Bar {...barOptions} />\n          <ChartLegend legends={barLegends} />\n        </ChartCard>\n\n        {/* <ChartCard title=\"Traffic\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard> */}\n      </div>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        {/* <ChartCard title=\"Beneficiary Age Group\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Beneficiary By Gender\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard> */}\n\n        <ChartCard title=\"Beneficiary Balance\">\n          <Bar {...barOptions} />\n          <ChartLegend legends={barLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Beneficiary By Location\">\n          <Bar {...barOptions} />\n          <ChartLegend legends={barLegends} />\n        </ChartCard>\n\n        {/* <ChartCard title=\"Traffic\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard> */}\n      </div>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","export default [\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg',\n    name: 'Bama Community Hall Rebuild',\n    job: '$980',\n    amount: 989,\n    status: 'Completed',\n    date: 'Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg',\n    name: 'Hospital Shelter',\n    job: '$471',\n    amount: 471,\n    status: 'Completed',\n    date: 'Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg',\n    name: 'Feed the Children',\n    job: '$754',\n    amount: 934,\n    status: 'ongoing',\n    date: 'Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)',\n  },\n  {\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg',\n    name: 'Birnin Road Project',\n    job: '$3350',\n    amount: 5350,\n    status: 'ogoing',\n    date: 'Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)',\n  },\n// {\n//   avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg',\n//   name: 'Lorenz Botsford',\n//   job: '$355',\n//   amount: 355,\n//   status: 'neutral',\n//   date: 'Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)',\n// },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg',\n//     name: 'Everette Botsford',\n//     job: 'Product Group Architect',\n//     amount: 525.42,\n//     status: 'success',\n//     date: 'Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg',\n//     name: 'Marilou Beahan',\n//     job: 'Future Security Planner',\n//     amount: 414.99,\n//     status: 'success',\n//     date: 'Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg',\n//     name: 'Ceasar Sauer',\n//     job: 'Direct Brand Specialist',\n//     amount: 488.0,\n//     status: 'primary',\n//     date: 'Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg',\n//     name: 'Rae McDermott',\n//     job: 'Lead Branding Engineer',\n//     amount: 502.69,\n//     status: 'danger',\n//     date: 'Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg',\n//     name: 'Mable Steuber',\n//     job: 'National Group Executive',\n//     amount: 911.09,\n//     status: 'danger',\n//     date: 'Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg',\n//     name: 'Julian Glover',\n//     job: 'Global Branding Assistant',\n//     amount: 656.94,\n//     status: 'danger',\n//     date: 'Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg',\n//     name: 'Duncan Toy',\n//     job: 'Central Intranet Manager',\n//     amount: 120.78,\n//     status: 'danger',\n//     date: 'Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg',\n//     name: 'Blanche Friesen',\n//     job: 'Forward Identity Executive',\n//     amount: 676.95,\n//     status: 'danger',\n//     date: 'Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg',\n//     name: 'Orion Koepp',\n//     job: 'Global Accountability Strategist',\n//     amount: 447.56,\n//     status: 'danger',\n//     date: 'Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg',\n//     name: 'Dakota Vandervort',\n//     job: 'Future Assurance Coordinator',\n//     amount: 765.22,\n//     status: 'danger',\n//     date: 'Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg',\n//     name: 'Lily Collier',\n//     job: 'Forward Configuration Orchestrator',\n//     amount: 449.11,\n//     status: 'danger',\n//     date: 'Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg',\n//     name: 'Kayleigh Schumm',\n//     job: 'Central Division Agent',\n//     amount: 65.54,\n//     status: 'danger',\n//     date: 'Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg',\n//     name: 'General McGlynn',\n//     job: 'Central Web Analyst',\n//     amount: 30.51,\n//     status: 'danger',\n//     date: 'Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg',\n//     name: 'Shayna Schumm',\n//     job: 'Future Directives Engineer',\n//     amount: 313.73,\n//     status: 'danger',\n//     date: 'Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg',\n//     name: 'Giovanna Sanford',\n//     job: 'Dynamic Interactions Executive',\n//     amount: 398.3,\n//     status: 'danger',\n//     date: 'Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg',\n//     name: 'Emie Mante',\n//     job: 'Direct Factors Supervisor',\n//     amount: 142.51,\n//     status: 'danger',\n//     date: 'Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg',\n//     name: 'Chance Muller',\n//     job: 'Lead Usability Planner',\n//     amount: 963.26,\n//     status: 'danger',\n//     date: 'Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg',\n//     name: 'Armani Torphy',\n//     job: 'Forward Functionality Analyst',\n//     amount: 445.23,\n//     status: 'danger',\n//     date: 'Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg',\n//     name: 'Braeden Ward',\n//     job: 'Central Integration Director',\n//     amount: 588.53,\n//     status: 'danger',\n//     date: 'Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg',\n//     name: 'Malcolm Price',\n//     job: 'District Program Planner',\n//     amount: 181.93,\n//     status: 'danger',\n//     date: 'Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg',\n//     name: 'Susan Jast',\n//     job: 'Future Paradigm Associate',\n//     amount: 928.41,\n//     status: 'danger',\n//     date: 'Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg',\n//     name: 'Torrey Reynolds',\n//     job: 'Lead Security Agent',\n//     amount: 447.37,\n//     status: 'danger',\n//     date: 'Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg',\n//     name: 'Travon Harber',\n//     job: 'Legacy Marketing Facilitator',\n//     amount: 422.48,\n//     status: 'danger',\n//     date: 'Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg',\n//     name: 'Hattie Gutkowski',\n//     job: 'Chief Configuration Supervisor',\n//     amount: 714.34,\n//     status: 'danger',\n//     date: 'Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg',\n//     name: 'Demarco Lang',\n//     job: 'Investor Program Designer',\n//     amount: 536.92,\n//     status: 'danger',\n//     date: 'Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg',\n//     name: 'Glennie Ziemann',\n//     job: 'Dynamic Interactions Analyst',\n//     amount: 597.25,\n//     status: 'danger',\n//     date: 'Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg',\n//     name: 'Alta Howe',\n//     job: 'District Intranet Executive',\n//     amount: 42.28,\n//     status: 'danger',\n//     date: 'Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg',\n//     name: 'Sydnee Gottlieb',\n//     job: 'Global Response Specialist',\n//     amount: 868.92,\n//     status: 'danger',\n//     date: 'Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg',\n//     name: 'Arlene Schmitt',\n//     job: 'Lead Metrics Consultant',\n//     amount: 364.68,\n//     status: 'danger',\n//     date: 'Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg',\n//     name: 'Hilda Schoen',\n//     job: 'National Solutions Facilitator',\n//     amount: 260.91,\n//     status: 'danger',\n//     date: 'Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg',\n//     name: 'Chase Bahringer',\n//     job: 'Dynamic Communications Designer',\n//     amount: 454.61,\n//     status: 'danger',\n//     date: 'Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg',\n//     name: 'Lucile Hansen',\n//     job: 'Customer Usability Facilitator',\n//     amount: 982.22,\n//     status: 'danger',\n//     date: 'Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg',\n//     name: 'Mollie Heaney',\n//     job: 'Forward Communications Director',\n//     amount: 390.33,\n//     status: 'danger',\n//     date: 'Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg',\n//     name: 'Bennie Kuvalis',\n//     job: 'Future Factors Agent',\n//     amount: 456.64,\n//     status: 'danger',\n//     date: 'Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg',\n//     name: 'Jodie Luettgen',\n//     job: 'Customer Implementation Associate',\n//     amount: 398.37,\n//     status: 'danger',\n//     date: 'Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg',\n//     name: 'Bethel Quitzon',\n//     job: 'Dynamic Web Strategist',\n//     amount: 183.58,\n//     status: 'danger',\n//     date: 'Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg',\n//     name: 'Jon Dietrich',\n//     job: 'Legacy Creative Planner',\n//     amount: 439.01,\n//     status: 'danger',\n//     date: 'Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg',\n//     name: 'Nakia Kihn',\n//     job: 'Central Interactions Coordinator',\n//     amount: 824.12,\n//     status: 'danger',\n//     date: 'Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg',\n//     name: 'Assunta Grady',\n//     job: 'Investor Operations Specialist',\n//     amount: 172.97,\n//     status: 'danger',\n//     date: 'Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)',\n//   },\n//   {\n//     avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg',\n//     name: 'Lukas Klocko',\n//     job: 'Human Usability Associate',\n//     amount: 515.74,\n//     status: 'danger',\n//     date: 'Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)',\n//   },\n]\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export const doughnutLegends = [\n  { title: 'Male', color: 'bg-blue-500' },\n  { title: 'Children', color: 'bg-teal-600' },\n  { title: 'Female', color: 'bg-purple-600' },\n]\n\nexport const lineLegends = [\n  { title: 'Organic', color: 'bg-teal-600' },\n  { title: 'Paid', color: 'bg-purple-600' },\n]\n\nexport const barLegends = [\n  { title: 'Male', color: 'bg-teal-600' },\n  { title: 'Female', color: 'bg-purple-600' },\n]\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: ['#0694a2', '#1c64f2', '#7e3af2'],\n        label: 'Dataset 1',\n      },\n    ],\n    labels: ['Shoes', 'Shirts', 'Bags'],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const lineOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Organic',\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#0694a2',\n        borderColor: '#0694a2',\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: 'Paid',\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#7e3af2',\n        borderColor: '#7e3af2',\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n      intersect: false,\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Month',\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Value',\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const barOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Male',\n        backgroundColor: '#0694a2',\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: 'Female',\n        backgroundColor: '#7e3af2',\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n}\n"],"sourceRoot":""}