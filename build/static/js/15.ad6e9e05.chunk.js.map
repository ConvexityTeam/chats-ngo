{"version":3,"sources":["pages/CreateAccount.js","services/auth.service.js","assets/img/chats-transparent.png"],"names":["required","value","className","role","validEmail","isEmail","vpassword","length","Login","props","form","useRef","checkBtn","useState","name","setName","email","setEmail","password","setPassword","successful","setSuccessful","message","setMessage","style","backgroundImage","backgroundSize","height","src","require","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","AuthService","register","then","response","data","error","resMessage","toString","ref","for","type","onChange","target","validations","placeholder","display","to","Axios","post","login","localStorage","setItem","JSON","stringify","console","log","logout","removeItem","getCurrentNGO","parse","getItem","module","exports"],"mappings":"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","file":"static/js/15.ad6e9e05.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n// import '../styles/app.css'\n// import ImageLight from '../assets/img/login-office.jpeg'\n// import ImageDark from '../assets/img/login-office-dark.jpeg'\n// import { GithubIcon, TwitterIcon } from '../icons'\n// import { Label, Input, Button } from '@windmill/react-ui'\n\nconst backgroundImage = 'https://res.cloudinary.com/emmaodia/image/upload/v1601308326/NGOphotos_rfrllr.jpg'\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <span className=\"block sm:inline\"> This field is required!</span>\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <span className=\"block sm:inline\">Please enter valid email.</span>\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <span className=\"block sm:inline\">The password must be more than 6 characters.</span>\n      </div>\n    );\n  }\n};\n\n  \nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeName = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n      e.preventDefault();\n\n      setMessage(\"\");\n      setSuccessful(false);\n\n      form.current.validateAll();\n\n      if (checkBtn.current.context._errors.length === 0) {\n        AuthService.register(name, email, password).then(\n          (response) => {\n            setMessage(response.data.message);\n            setSuccessful(true);\n          },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      }\n    };\n\n\n  return (\n    <section className=\"body-bg min-h-screen pt-12 md:pt-20 pb-6 px-2 md:px-0\" style={{ backgroundImage:`url(${backgroundImage})`, backgroundSize: \"cover\",\n    height: \"100vh\", }}>\n            <header className=\"max-w-lg mx-auto\">\n                <div className=\"flex items-center\">\n                    <img src={require('../assets/img/chats-transparent.png')} className=\"h-16\" alt=\"CHATS logo\" />\n                </div>\n                <div>\n                    <h1 className=\"flex text-2xl font-bold text-white text-center justify-center\">Welcome to CHATS</h1>\n                </div>\n            </header>\n\n            <main className=\"bg-white max-w-lg mx-auto p-8 md:p-12 my-10 rounded-lg shadow-2xl\">\n                {/* <section>\n                    <h3 className=\"font-bold text-2xl\">Welcome,</h3>\n                    <p className=\"text-gray-600 pt-2\">Sign in to your account.</p>\n                </section> */}\n\n                <section className=\"mt-10\">\n                    <Form className=\"flex flex-col\" onSubmit={handleRegister} ref={form}>\n                      {!successful && (\n                        <>\n                          <div className=\"mb-4\">\n                          <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n                          Name of Organization\n                          </label>\n                          <Input \n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-1 leading-tight focus:outline-none focus:shadow-outline\" \n                            name=\"name\" \n                            type=\"text\" \n                            value={name}\n                            onChange={onChangeName}\n                            validations={[required]}\n                            placeholder=\"\" \n                          />\n                        </div>\n                        <div className=\"mb-4\">\n                          <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n                            Email\n                          </label>\n                          <Input \n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-1 leading-tight focus:outline-none focus:shadow-outline\" \n                            name=\"email\" \n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required, validEmail]}\n                            type=\"text\" \n                            placeholder=\"\" \n                          />\n                        </div>\n                        <div className=\"mb-6\">\n                          <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"password\">\n                            Password\n                          </label>\n                          <Input \n                            className=\"shadow appearance-none border border-grey-500 rounded w-full py-2 px-3 text-gray-700 mb-1 leading-tight focus:outline-none focus:shadow-outline\" \n                            name=\"password\" \n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required, vpassword]}\n                            type=\"password\" \n                            placeholder=\"\" \n                          />\n                          <p className=\"text-red-500 text-xs italic\"></p>\n                        </div>\n                        \n                        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 rounded shadow-lg hover:shadow-xl transition duration-200\" type=\"submit\">Create Account</button>\n                      </>\n                      )}\n                        \n                        {message && (\n                         \n                            <div\n                              className={ successful ? \"m-8 bg-red-100 border border-purple-400 text-purple-700 px-4 py-3 rounded relative justify-center text-center\" : \"m-8 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative justify-center text-center\" }\n\n                              role=\"alert\"\n                            >\n                            <strong className=\"font-bold\">{message}</strong>\n                            <p>Please click on Login to Signin to your Account!</p>\n                            </div>\n                          \n                        )}\n                        <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                        \n                    </Form>\n                    <div className=\"max-w-lg mx-auto text-center mt-12 mb-6\">\n                        <p className=\"text-black\">Have an account? <Link to=\"/login\" className=\"font-bold hover:text-purple-700 hover:underline\">Login</Link>.</p>\n                    </div>\n                    <div className=\"flex justify-center\">\n                        <Link to=\"#\" className=\"text-sm text-black-600 hover:text-purple-700 hover:underline mb-6\">Forgot your password?</Link>\n                    </div>\n                </section>\n            </main>\n            </section>\n  )\n}\n\nexport default Login\n","import Axios from 'axios';\n\nconst SIGNUP_API_URL = `https://chats-backend.herokuapp.com/api/v1/ngo/auth/register`;\nconst SIGNIN_API_URL = `https://chats-backend.herokuapp.com/api/v1/ngo/auth/login`;\n\n\nconst login = (email, password) => {\n        return Axios\n                .post(SIGNIN_API_URL, {\n                    email,\n                    password\n                })\n                .then(response => {\n                    if (response.data) {\n                        localStorage.setItem('organization', JSON.stringify(response.data));\n                    }\n\n                    console.log(\"response\")\n                    console.log(response.data)\n                    return response.data\n                })\n    }\n\nconst logout = () => {\n        localStorage.removeItem('organization');\n    }\n\nconst register = (name, email, password) => {\n        return Axios\n                .post(SIGNUP_API_URL, {\n                    name, email, password\n                })\n    }\n\nconst getCurrentNGO = () => {\n        return JSON.parse(localStorage.getItem('organization'))\n    }\n\n\nexport default {\n    register,\n  login,\n  logout,\n  getCurrentNGO,\n}","module.exports = __webpack_public_path__ + \"static/media/chats-transparent.08346459.png\";"],"sourceRoot":""}